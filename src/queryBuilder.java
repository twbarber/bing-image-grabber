import java.io.IOException;


public class queryBuilder {
	
	public String queryTerm;  				// Int generated by generateTerm method
	public String queryFilter;				// Sets default filter to moderate... no obscene images
	public String queryMarket = "en-US";	// Sets default region to US
	public String queryResultAmount;		// Total number of image URLs grabbed from query 
	public String queryRetrunType = "JSON"; // Query will yield a JSON object to parse
	public String queryURL; 				// Final URL sent to Bing, created by makeQuery method
	public String queryOffset;				// Used if Result amount > 50
	public String rawQueryTerm;
	
	public queryBuilder(String queryChoice, int imageCount, String queryFilter) throws IOException {

		keyHandler myKeyHandler = new keyHandler();				// Used to get users App Key
		myKeyHandler.getUserKey();								// Actually gets users App Key
		this.encryptedKey = myKeyHandler.encryptedKey;			// Passes encrypted key to this
		if(queryChoice.equals("random"))
			this.queryTerm = generateTerm();					// Search term, 6 digit int
		else this.queryTerm = queryChoice;						// Search term, user input
		this.queryFilter = queryFilter;
		this.rawQueryTerm = queryTerm; 							// Used later for directories
		this.queryResultAmount = String.valueOf(imageCount);	// Image download count
		if(imageCount > 50) {
			this.queryResultAmount = "50";
			this.imagesRemaining = (imageCount - 50);			// Used for queries in amount >50
		}
		this.queryOffset = "0";
	}
	
	// Generates a random integer between 100000 and 999999 to be used
	// as the query by the imageGrabber.
	public String generateTerm() {

		int generatedNum = 100000 + (int)(Math.random() * ((899999) + 1));
		return String.valueOf(generatedNum);
	}
	
	// Formats parameters to comply with URL needs
	// Example: 
	public void encodeParameters() {

		this.queryTerm = "?Query=%27" + this.queryTerm + "%27";
		this.queryFilter = "&Adult=%27" + this.queryFilter + "%27";
		this.queryMarket = "&Market=%27" + this.queryMarket + "%27";
		this.queryResultAmount = "&$top=" + this.queryResultAmount; 
		this.queryOffset = "&$skip=" + this.queryOffset;
		this.queryRetrunType = "&$format=" + this.queryRetrunType;
	}

	// Generated the Query to be thrown at Bing. Composed of the root Bing search URL,
	// the search term, the search region, and the content filter. 
	public void makeQuery() {

		String rootURL = "https://api.datamarket.azure.com/Bing/Search/Image";

		this.queryURL = rootURL + 

				// Necessary field for search
				this.queryTerm +

				// Optional fields beyond this point, filling for URL completeness
				this.queryFilter +
				this.queryMarket +
				this.queryResultAmount +
				this.queryOffset +

				// Specifies return Object will be a JSON object
				this.queryRetrunType;
	} 
}
